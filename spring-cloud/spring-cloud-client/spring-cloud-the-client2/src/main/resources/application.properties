server.port=8182
spring.application.name=client2
#spring.devtools.restart.enabled=false
spring.security.user.name=admin
spring.security.user.password=admin123
#带用户和密码的注册中心
#eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/
#多个服务注册中心时用逗号隔开
eureka.client.serviceUrl.defaultZone=http://${spring.security.user.name}:${spring.security.user.password}@localhost:8761/eureka/,http://admin:admin123@localhost:8762/eureka/
#eureka.client.serviceUrl.defaultZone=http://admin:admin123@localhost:8761/eureka/,http://admin:admin123@localhost:8762/eureka/,http://admin:admin123@localhost:8763/eureka/

# 采用IP注册
eureka.instance.preferIpAddress=true
# 定义实例ID格式
#eureka.instance.instance-id=${spring.application.name}:${spring.cloud.client.ip-address}:${server.port}

# 禁用 Eureka
ribbon.eureka.enabled=false
# 请求连接的超时时间
#ribbon.ConnectTimeout=2000
# 请求处理的超时时间
#ribbon.ReadTimeout=5000
# 最大连接数
#ribbon.MaxTotalConnections=500
# 每个host最大连接数
#ribbon.MaxConnectionsPerHost=500

#也可以为每个Ribbon客户端设置不同的超时时间, 通过服务名称进行指定：
#ribbon-config-demo.ribbon.ConnectTimeout=2000
#ribbon-config-demo.ribbon.ReadTimeout=5000

#可通过配置的方式使用自定义的负载策略
#client2.ribbon.NFLoadBalancerRuleClassName=org.spring.cloud.client2.MyRule


#自定义log日志输出20201104
logging.path=/Users/jackie/workspace/rome/ 
logging.file=client2.log
#logging.level.root=WARN
logging.level.root=INFO
#指定包下的日志级别
logging.level.com.jackie.springbootdemo.config=WARN
#日志输出格式
logging.pattern.console=[%d{yyyy-MM-dd HH:mm:ss}][%thread]%-5level %logger- %msg%n 
logging.pattern.file=[%d{yyyy-MM-dd HH:mm:ss}][%thread]%-5level %logger- %msg%n 